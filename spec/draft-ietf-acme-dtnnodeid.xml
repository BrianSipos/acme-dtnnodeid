<?xml version="1.0" encoding="UTF-8"?>
<?rfc toc="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" category="exp" docName="draft-ietf-acme-dtnnodeid-10" ipr="trust200902" submissionType="IETF" tocInclude="true" version="3">
  <front>
    <title abbrev="ACME DTN Node ID">
Automated Certificate Management Environment (ACME)
Delay-Tolerant Networking (DTN) Node ID Validation Extension
    </title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-acme-dtnnodeid-10"/>
    <author fullname="Brian Sipos" initials="B." surname="Sipos">
      <organization abbrev="RKF Engineering">RKF Engineering Solutions, LLC</organization>
      <address>
        <postal>
          <street>7500 Old Georgetown Road</street>
          <street>Suite 1275</street>
          <city>Bethesda</city>
          <region>MD</region>
          <code>20814-6198</code>
          <country>United States of America</country>
        </postal>
        <email>brian.sipos+ietf@gmail.com</email>
      </address>
    </author>
    <date/>
    <area>Security</area>
    <workgroup>Automated Certificate Management Environment</workgroup>
    <keyword>ACME</keyword>
    <keyword>DTN</keyword>
    <abstract>
      <t>
This document specifies an extension to the Automated Certificate Management Environment (ACME) protocol which allows an ACME server to validate the Delay-Tolerant Networking (DTN) Node ID for an ACME client.
The DTN Node ID is encoded as a certificate Subject Alternative Name (SAN) of type otherName with a name form of <tt>BundleEID</tt> and as an ACME Identifier type "bundleEID".
      </t>
    </abstract>
  </front>
  <middle>
    <section anchor="sec-intro">
      <name>Introduction</name>
      <t>
Although the original purpose of the Automatic Certificate Management Environment (ACME) <xref target="RFC8555"/> was to allow Public Key Infrastructure Using X.509 (PKIX) Certification Authorities (CAs) to validate network domain names of clients, the same mechanism can be used to validate any of the subject claims supported by the PKIX profile <xref target="RFC5280"/>.
      </t>
      <t>
In the case of this specification, the claim being validated is a Subject Alternative Name (SAN) of type otherName with a name form of <tt>BundleEID</tt>, which used to represent an Endpoint ID (EID) for a Delay-Tolerant Networking (DTN) bundle.
Currently the URI schemes "dtn" and "ipn" as defined in <xref target="RFC9171"/> are valid for an Endpoint ID.
A DTN Node ID is an Endpoint ID with scheme-specific restrictions to identify it as such; currently the "dtn" scheme uses an empty demux part and the "ipn" scheme uses service number zero.
      </t>
      <t>
Because the <tt>BundleEID</tt> claim is new to ACME, a new ACME Identifier type "bundleEID" is needed to manage this claim within ACME messaging.
A "bundleEID" claim can be part of a pre-authorization or as one of the authorizations of an order containing any number of claims.
      </t>
      <t>
Once an ACME server validates a Node ID, either as a pre-authorization of the "bundleEID" or as one of the authorizations of an order containing a "bundleEID", the client can finalize the order using an associated certificate signing request (CSR).
Because a single order can contain multiple identifiers of multiple types, there can be operational issues for a client attempting to, and possibly failing to, validate those multiple identifiers as described in <xref target="sec-multiple-claims"/>.
Once a certificate is issued for a Node ID, how the ACME client configures the Bundle Protocol (BP) agent with the new certificate is an implementation matter.
      </t>
      <t>
The emergent properties of DTN naming and BP security are still being developed and explored, especially between different organizational and administrative domains, so the "experimental" status of this document is related more to the practical utility of this kind of Node ID validation than to the validation method itself.
The original use case is in large or cross-organizational networks where a BP node can be trusted to be allocated and added to a network, but the method of certificate validation and issuance is desired to be in-band on the network rather than configured solely through a side channel using bespoke or manual protocols.
Because this mechanism is so similar to other validation methods, specifically <xref target="RFC8823"/>, it is expected to have few implementation difficulties or interoperability issues.
      </t>
      <section>
        <name>Scope</name>
        <t>
This document describes the ACME messages, BPv7 payloads, and BPSec requirements needed to validate Node ID ownership.
This document does not address:
        </t>
        <ul spacing="normal">
          <li>
Mechanisms for communication between ACME client or ACME server and their associated BP agent(s).
This document only describes exchanges between ACME client--server pairs and between their BP agents.
          </li>
          <li>
Specific BP extension blocks or BPSec security contexts necessary to fulfill the security requirements of this protocol.
The exact security context needed, and their parameters, are network-specific.
          </li>
          <li>
Policies or mechanisms for defining or configuring bundle integrity gateways, or trusting integrity gateways on an individual entity or across a network.
          </li>
          <li>
Mechanisms for locating or identifying other bundle entities (peers) within a network or across an internet.
The mapping of Node ID to potential convergence layer (CL) protocol and network address is left to implementation and configuration of the BP Agent and its various potential routing strategies.
          </li>
          <li>
Logic for routing bundles along a path toward a bundle's endpoint.
This protocol is involved only in creating bundles at a source and handling them at a destination.
          </li>
          <li>
Logic for performing rate control and congestion control of bundle transfers.
The ACME server is responsible for rate control of validation requests.
          </li>
          <li>
Policies or mechanisms for an ACME server to choose a prioritized list of acceptable hash algorithms, or for an ACME client to choose a set of acceptable hash algorithms.
          </li>
          <li>
Policies or mechanisms for provisioning, deploying, or accessing certificates and private keys; deploying or accessing certificate revocation lists (CRLs); or configuring security parameters on an individual entity or across a network.
          </li>
          <li>
Policies or mechanisms for an ACME server to handle mixed-use certificate requests.
This specification is focused only on single-use DTN-specific PKIX profiles.
          </li>
        </ul>
      </section>
      <section>
        <name>Authorization Strategy</name>
        <t>
The basic unit of data exchange in a DTN is a Bundle <xref target="RFC9171"/>, which consists of a data payload with accompanying metadata.
An Endpoint ID is used as the destination of a Bundle and can indicate both a unicast or a multicast destination.
A Node ID is used to identify the source of a Bundle and is used for routing through intermediate nodes, including the final node(s) used to deliver a Bundle to its destination endpoint.
A Node ID can also be used as an endpoint for administrative bundles.
More detailed descriptions of the rationale and capabilities of these networks can be found in "Delay-Tolerant Network Architecture" <xref target="RFC4838"/>.
        </t>
        <t>
When an ACME client requests a pre-authorization or an order with a "bundleEID" identifier type having a value consistent with a Node ID (see <xref section="4.2.5" target="RFC9171"/>), the ACME server offers a "dtn-nodeid-01" challenge type to validate that Node ID.
If the ACME client attempts the authorization challenge to validate a Node ID, the ACME server sends an ACME Node ID Validation Challenge Bundle with a destination of the Node ID being validated.
The BP agent on that node receives the Challenge Bundle, generates an ACME key authorization digest, and sends an ACME Node ID Validation Response Bundle in reply.
An Integrity Gateway on the client side of the DTN can be used to attest to the source of the Response Bundle.
Finally, the ACME server receives the Response Bundle and checks that the digest was generated for the associated ACME challenge and from the client account key associated with the original request.
This workflow is shown in the diagram of <xref target="fig-entity-relations"/> and defined in <xref target="sec-validate-nodeid"/>.
        </t>
        <figure anchor="fig-entity-relations">
          <name>The relationships and flows between Node ID Validation entities</name>
          <artwork align="center" type="ascii-art">
     +------------+                             +------------+
     |    ACME    |&lt;===== HTTPS exchanges =====&gt;|    ACME    |
     |   Client   |                             |   Server   |
     +------------+                             +------------+
           |                                       |   ^
(1) Enable or (6) disable                 (2) Send |   |
  validation from server                 Challenge |   |(5) Indicate
           |                  Non-DTN              |   |   Response
~~~~~~~~~~~|~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|~~~|~~~~~~~~~~~~
           V                    DTN                V   |
    ++------------++                           ++------------++
    || Admin Elem.||                           || Admin Elem.||-+
    |+------------+|           (3) Challenge   |+------------+| |
    |   Client's   |&lt;------------- Bundle -----|   Server's   | |
    |   BP Agent   |                           |   BP Agent   | |
    +--------------+                           +--------------+ |
           |                                     +----^---------+
           |     +-------------+                      |
           |     |  Integrity  |   (4) Response       |
           +----&gt;|   Gateway   |------ Bundle --------+
                 +-------------+
</artwork>
        </figure>
        <t>
Because the DTN Node ID is used both for routing bundles between BP agents and for multiplexing administrative services within a BP agent, there is no possibility to separate the ACME validation of a Node ID from normal bundle handling for that same Node ID.
This leaves administrative record types as a way to leave the Node ID unchanged while disambiguating from other service data bundles.
        </t>
        <t>
There is nothing in this protocol which requires network-topological co-location of either the ACME client or ACME server with their associated BP agent.
While ACME requires a low-enough latency network to perform HTTPS exchanges between ACME client and server, the client's BP agent (the one being validated) could be on the far side of a long-delay or multi-hop DTN network.
The means by which the ACME client or server communicates with its associated BP agent is an implementation matter.
        </t>
      </section>
      <section>
        <name>Use of CDDL</name>
        <t>
This document defines CBOR structure using the Concise Data Definition Language (CDDL) of <xref target="RFC8610"/>.
The entire CDDL structure can be extracted from the XML version of this document using the XPath expression:
        </t>
        <sourcecode>'//sourcecode[@type="cddl"]'</sourcecode>
        <t>
The following initial fragment defines the top-level symbols of this document's CDDL, which includes the example CBOR content.
        </t>
        <sourcecode type="cddl">
start = acme-record / bundle / tstr
        </sourcecode>
      </section>
      <section anchor="sec-terminology">
        <name>Terminology</name>
        <t>
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.
        </t>
        <t>
Because this document combines two otherwise unrelated contexts, ACME and DTN, when a protocol term applies to one of those areas and is used in the other its name is prefixed with either "ACME" or "DTN" respectively.
Thus within the ACME context the term is "DTN Node ID" while in the DTN context the name is just "Node ID".
        </t>
        <t>
In this document, several terms are shortened for the sake of terseness.
These terms are:
        </t>
        <dl newline="false" spacing="normal">
          <dt>Challenge Request:</dt>
          <dd>
This is a shortened form of the full "DTN Node ID Challenge Request Object".
It is a JSON object created by the ACME server for challenge type "dtn-nodeid-01".
          </dd>
          <dt>Challenge Response:</dt>
          <dd>
This is a shortened form of the full "DTN Node ID Challenge Response Object".
It is a JSON object created by the ACME client to authorize a challenge type "dtn-nodeid-01".
          </dd>
          <dt>Challenge Bundle:</dt>
          <dd>
This is a shortened form of the full "ACME Node ID Validation Challenge Bundle".
It is a Bundle created by the BP agent managed by the ACME server to challenge a Node ID claim.
          </dd>
          <dt>Response Bundle:</dt>
          <dd>
This is a shortened form of the full "ACME Node ID Validation Response Bundle".
It is a Bundle created by the BP agent managed by the ACME client to validate a Node ID claim.
          </dd>
        </dl>
        <t>
Because this is an ACME document, the following DTN Bundle Protocol terms are defined here to clarify how they are used by this ACME identifier type and validation mechanism.
        </t>
        <dl>
          <dt>Endpoint ID:</dt>
          <dd>
An Endpoint ID is an identifier for the ultimate destination of a bundle, independent of any intermediate forwarding needed to reach that destination.
An endpoint can be a singleton (unicast) or not (anycast or multicast) so an Endpoint ID can also represent a single entity or a set of entities.
This is formally defined in <xref section="4.2.5.1" target="RFC9171"/>.
          </dd>
          <dt>Node ID:</dt>
          <dd>
A Node ID is a (not guaranteed unique) identifier for a specific node in a network in the form of a singleton Endpoint ID.
A single node can have any number of Node IDs but a typical (and expected) form of Node ID is the Administrative Endpoint ID (described below).
This is formally defined in <xref section="4.2.5.2" target="RFC9171"/>.
          </dd>
          <dt>Administrative Endpoint ID:</dt>
          <dd>
An Administrative Endpoint ID is unique for a node within a specific URI scheme.
Although any Node ID can be a valid bundle Source and Destination, the Administrative Endpoint ID is a minimum required Node ID for any node operating in a particular URI scheme.
For the "dtn" scheme this is the empty demux part and for the "ipn" scheme this is the service number zero.
These is formally defined under <xref section="4.2.5.1" target="RFC9171"/>.
          </dd>
        </dl>
      </section>
    </section>
    <section anchor="sec-acme-uri">
      <name>Bundle Endpoint ID ACME Identifier</name>
      <t>
This specification is the first to make use of an Bundle Endpoint ID to identify a claim for a certificate request in ACME.
In this document, the only purpose for which an Bundle Endpoint ID ACME identifier is validated is as a DTN Node ID (see <xref target="sec-validate-nodeid"/>), but other specifications can define challenge types for other Endpoint ID uses.
      </t>
      <t>
Identifiers of type "bundleEID" in certificate requests <bcp14>SHALL</bcp14> appear in an extensionRequest attribute <xref target="RFC2985"/> containing a subjectAltName extension of type otherName with a name form of <tt>BundleEID</tt>, identified by <tt>id-on-bundleEID</tt> of <xref target="IANA-SMI"/>, consistent with the requirements of <xref section="4.4.2.1" target="RFC9174"/>.
Because the <tt>BundleEID</tt> is encoded as an IA5String it <bcp14>SHALL</bcp14> be treated as being in the percent-encoded form of <xref section="2.1" target="RFC3986"/>.
Any "bundleEID" identifier which fails to properly percent-decode <bcp14>SHALL</bcp14> be rejected with an ACME error type of "malformed".
      </t>
      <t>
The ACME server <bcp14>SHALL</bcp14> decode and normalize (based on scheme-specific syntax) all received identifiers of type "bundleEID".
Any "bundleEID" identifier request which uses a scheme not handled by the ACME server or for which the EID does not match the scheme-specific syntax <bcp14>SHALL</bcp14> be rejected with an ACME error type of "rejectedIdentifier".
      </t>
      <t>
When an ACME server needs to request proof that a client controls a <tt>BundleEID</tt>, it <bcp14>SHALL</bcp14> create an authorization with the identifier type "bundleEID".
The ACME server <bcp14>SHALL NOT</bcp14> attempt to dereference the EID value on its own.
It is the responsibility of a validation method to ensure the EID ownership via scheme-specific means authorized by the ACME client.
      </t>
      <t keepWithNext="true">
An identifier for the Node ID of "dtn://example/" would be formatted as:
      </t>
      <sourcecode type="json">
{
  "type": "bundleEID",
  "value": "dtn://example/"
}
</sourcecode>
    <section anchor="sec-eid-uses">
      <name>Subsets of Endpoint ID</name>
        <t>
While the PKIX other name form of <tt>BundleEID</tt> can hold any Endpoint ID value, the certificate profile used by <xref target="RFC9174"/> and supported by this ACME validation method in <xref target="sec-validate-nodeid"/> requires that the value hold a Node ID.
        </t>
        <t>
In addition to the narrowing of that certificate profile, this validation method requires that the client's BP agent responds to administrative records sent to the Node ID being validated.
This typically is limited to an Administrative Endpoint ID, but there is no prohibition on the administrative element of a BP node from receiving administrative records for, and sending records from, other Node IDs in order to support this validation method.
        </t>
        <t>
Neither that certificate profile nor this validation method support operating on non-singleton Endpoint IDs, but other validation methods could be defined to do so in order to support other certificate profiles.
        </t>
      </section>
    </section>
    <section anchor="sec-validate-nodeid">
      <name>DTN Node ID Validation</name>
      <t>
The DTN Node ID validation method proves control over a Node ID by requiring the ACME client to configure a BP agent to respond to specific Challenge Bundles sent from the ACME server.
The ACME server validates control of the Node ID by verifying that received Response Bundles correspond with the BP Node and client account key being validated.
      </t>
      <t>
Similar to the ACME use case for validating email address ownership <xref target="RFC8823"/>, this challenge splits the token into several parts, each being transported by a different channel, and the Key Authorization result requires combining all parts of the token.
A separate challenge identifier is used as a filter by BP agents similarly to the challenge "from" email address of <xref target="RFC8823"/>.
      </t>
      <t>
The token parts are:
      </t>
      <dl>
        <dt>
          <tt>token-chal</tt>:
        </dt>
        <dd>
This token is unique to each ACME authorization.
It is contained in the Challenge Object of <xref target="sec-nodeid-challenge-request"/>.
Each authorization can consist of multiple Challenge Bundles (e.g. taking different routes), but they all share the same <tt>token-chal</tt> value.
This ensures that the Key Authorization is bound to the specific ACME challenge (and parent ACME authorization).
This token does not appear on the BP channel so that any eavesdropper knowing the client's account key thumbprint (e.g. from some other validation method) is not able to impersonate the client.
        </dd>
        <dt>
          <tt>token-bundle</tt>:
        </dt>
        <dd>
This token is unique to each Challenge Bundle sent by the ACME server.
It is contained in the Challenge Bundle of <xref target="sec-bundle-challenge"/> and Response Bundle of <xref target="sec-bundle-response"/>.
This ensures that the Key Authorization is bound to the ability to receive the Challenge Bundle and not just have access to the ACME Challenge Object.
This token is also accessible to DTN on-path eavesdroppers.
        </dd>
      </dl>
      <t>
Because multiple Challenge Bundles can be sent to validate the same Node ID, the <tt>token-bundle</tt> in the response is needed to correlate with the expected Key Authorization digest.
      </t>
      <t>
The DTN Node ID Challenge <bcp14>SHALL</bcp14> only be allowed for an EID usable as a DTN Node ID, which is defined per-scheme in <xref section="4.2.5.1" target="RFC9171"/>.
When an ACME server supports Node ID validation, the ACME server <bcp14>SHALL</bcp14> define a challenge object in accordance with <xref target="sec-nodeid-challenge-request"/>.
Once this challenge object is defined, the ACME client may begin the validation.
      </t>
      <t>
To initiate a Node ID validation, the ACME client performs the following steps:
      </t>
      <ol type="1">
        <li>
The ACME client POSTs a newOrder or newAuthz request including the identifier of type "bundleEID" for the desired Node ID.
From either of these entry points an authorization for the "bundleEID" type is indicated by the ACME server.
See <xref section="7.4" target="RFC8555"/> for more details.
        </li>
        <li>
The ACME client obtains the <tt>id-chal</tt> and <tt>token-chal</tt> from the challenge object in accordance with <xref target="sec-nodeid-challenge-request"/>.
        </li>
        <li anchor="step-client-authorize">
The ACME client indicates to the administrative element of its BP agent the <tt>id-chal</tt> which is authorized for use along with the associated <tt>token-chal</tt> and client account key thumbprint.
The ACME client <bcp14>SHALL</bcp14> wait, if necessary, until the agent is configured before proceeding to the next step.
        </li>
        <li>
The ACME client POSTs a challenge response to the challenge URL on the ACME server accordance with <xref section="7.5.1" target="RFC8555"/>.
The payload object is constructed in accordance with <xref target="sec-nodeid-challenge-response"/>.
        </li>
        <li>
The administrative element waits for a Challenge Bundle to be received with the authorized ACME parameters, including its <tt>id-chal</tt> payload, in accordance with <xref target="sec-bundle-challenge"/>.
        </li>
        <li>
The administrative element concatenates <tt>token-bundle</tt> with <tt>token-chal</tt> (each as base64url-encoded text strings) and computes the Key Authorization in accordance with <xref section="8.1" target="RFC8555"/> using the full token and client account key thumbprint.
        </li>
        <li>
The administrative element chooses the highest-priority hash algorithm supported by both the client and server, uses that algorithm to compute the digest of the Key Authorization result, and generates a Response Bundle to send back to the ACME server in accordance with <xref target="sec-bundle-response"/>.
        </li>
        <li>
The ACME client waits for the authorization to be finalized on the ACME server in accordance with <xref section="7.5.1" target="RFC8555"/>.
        </li>
        <li>
Once the challenge is completed (successfully or not), the ACME client indicates to the BP agent that the <tt>id-chal</tt> is no longer usable.
If the authorization fails, the ACME client <bcp14>MAY</bcp14> retry the challenge from Step <xref format="counter" target="step-client-authorize"/>.
        </li>
      </ol>
      <t>
The ACME server verifies the client's control over a Node ID by performing the following steps:
      </t>
      <ol type="1">
        <li>
The ACME server receives a newOrder or newAuthz request including the identifier of type "bundleEID", where the URI value is a Node ID.
        </li>
        <li>
The ACME server generates an authorization for the Node ID with challenge type "dtn-nodeid-01" in accordance with <xref target="sec-nodeid-challenge-request"/>.
        </li>
        <li anchor="step-server-authorize">
The ACME server receives a POST to the challenge URL indicated from the authorization object.
The payload is handled in accordance with <xref target="sec-nodeid-challenge-response"/>.
        </li>
        <li>
The ACME server sends, via the administrative element of its BP agent, one or more Challenge Bundles in accordance with <xref target="sec-bundle-challenge"/>.
Each challenge bundle <bcp14>SHALL</bcp14> contain a distinct <tt>token-bundle</tt> to be able to correlate with a response bundle.
Computing an expected Key Authorization digest is not necessary until a response is received with a chosen hash algorithm.
        </li>
        <li>
The ACME server waits for Response Bundle(s) for a limited interval of time (based on the challenge response object of <xref target="sec-nodeid-challenge-response"/>).
Responses are encoded in accordance with <xref target="sec-bundle-response"/>.
        </li>
        <li>
Once received and decoded, the ACME server checks the contents of each Response Bundle in accordance with <xref target="sec-response-check"/>.
After all Challenge Bundles have either been responded to or timed-out, the ACME server policy (see <xref target="sec-multi-perspective"/>) determines whether the validation is successful.
If validation is not successful, a client may retry the challenge which starts in Step <xref format="counter" target="step-server-authorize"/>.
        </li>
      </ol>
      <t>
When responding to a Challenge Bundle, a BP agent <bcp14>SHALL</bcp14> send a single Response Bundle in accordance with <xref target="sec-bundle-response"/>.
A BP agent <bcp14>SHALL</bcp14> respond to ACME challenges only within the interval of time and only for the <tt>id-chal</tt> indicated by the ACME client.
A BP agent <bcp14>SHALL</bcp14> respond to multiple Challenge Bundles with the same ACME parameters but different bundle identities (source Node ID and timestamp); these correspond with the ACME server validating via multiple routing paths.
      </t>
      <section anchor="sec-nodeid-challenge-request">
        <name>DTN Node ID Challenge Request Object</name>
        <t>
The DTN Node ID Challenge request object is defined by the ACME server when it supports validating Node IDs.
        </t>
        <t>
The DTN Node ID Challenge request object has the following content:
        </t>
        <dl newline="false" spacing="normal">
          <dt>type (required, string):</dt>
          <dd>
The string "dtn-nodeid-01".
          </dd>
          <dt>id-chal (required, string):</dt>
          <dd>
This is a random value associated with a challenge which allows a client to filter valid Challenge Bundles.
The same value is used for all Challenge Bundles associated with an ACME challenge, including multi-perspective validation using multiple sources as described in <xref target="sec-multi-perspective"/>.
This value <bcp14>SHALL</bcp14> have at least 128 bits of entropy.
It <bcp14>SHALL NOT</bcp14> contain any characters outside the base64url alphabet as described in <xref section="5" target="RFC4648"/>.
Trailing '=' padding characters <bcp14>SHALL</bcp14> be stripped.
See <xref target="RFC4086"/> for additional information on randomness requirements.
          </dd>
          <dt>token-chal (required, string):</dt>
          <dd>
This is a random value, used as part of the Key Authorization algorithm, which is communicated to the ACME client only over the ACME channel.
This value <bcp14>SHALL</bcp14> have at least 128 bits of entropy.
It <bcp14>SHALL NOT</bcp14> contain any characters outside the base64url alphabet as described in <xref section="5" target="RFC4648"/>.
Trailing '=' padding characters <bcp14>SHALL</bcp14> be stripped.
See <xref target="RFC4086"/> for additional information on randomness requirements.
          </dd>
        </dl>
        <sourcecode type="json">
{
  "type": "dtn-nodeid-01",
  "url": "https://example.com/acme/chall/prV_B7yEyA4",
  "id-chal": "dDtaviYTPUWFS3NK37YWfQ",
  "token-chal": "tPUZNY4ONIk6LxErRFEjVw"
}
</sourcecode>
        <t>
The <tt>token-chal</tt> value included in this object applies to the entire challenge, and may correspond with multiple separate <tt>token-bundle</tt> values when multiple Challenge Bundles are sent for a single validation.
        </t>
      </section>
      <section anchor="sec-nodeid-challenge-response">
        <name>DTN Node ID Challenge Response Object</name>
        <t>
The DTN Node ID Challenge response object is defined by the ACME client when it authorizes validation of a Node ID.
Because a DTN has the potential for significantly longer delays than a non-DTN network, the ACME client is able to inform the ACME server if a particular validation round-trip is expected to take longer than normal network delays (on the order of seconds).
        </t>
        <t>
The DTN Node ID Challenge response object has the following content:
        </t>
        <dl newline="false" spacing="normal">
          <dt>rtt (optional, number):</dt>
          <dd>
An expected round-trip time (RTT), in seconds, between sending a Challenge Bundle and receiving a Response Bundle.
This value is a hint to the ACME server for how long to wait for responses but is not authoritative.
The minimum RTT value <bcp14>SHALL</bcp14> be zero.
There is no special significance to zero-value RTT, it simply indicates the response is expected in less than the least significant unit used by the ACME client.
            </dd>
        </dl>
        <sourcecode type="json">
{
  "rtt": 300.0
}
</sourcecode>
        <t>
A challenge response is not sent until the BP agent has been configured to properly respond to the challenge, so the RTT value is meant to indicate any node-specific path delays expected to encountered from the ACME server.
Because there is no requirement on the path (or paths) which bundles may traverse between the ACME server and the BP agent, and the ACME server can attempt some path diversity, the RTT value <bcp14>SHOULD</bcp14> be pessimistic.
        </t>
        <t>
A default bundle response interval, used when the object does not contain an RTT, <bcp14>SHOULD</bcp14> be a configurable parameter of the ACME server.
If the ACME client indicated an RTT value in the object, the response interval <bcp14>SHOULD</bcp14> be twice the RTT (with limiting logic applied as described below).
The lower limit on response interval is network-specific, but <bcp14>SHOULD NOT</bcp14> be shorter than one second.
The upper limit on response interval is network-specific, but <bcp14>SHOULD NOT</bcp14> be longer than one minute (60 seconds) for a terrestrial-only DTN.
        </t>
      </section>
      <section anchor="sec-bundle-challenge">
        <name>ACME Node ID Validation Challenge Bundles</name>
        <t>
Each ACME Node ID Validation Challenge Bundle <bcp14>SHALL</bcp14> be structured and encoded in accordance with <xref target="RFC9171"/>.
        </t>
        <t>
Each Challenge Bundle has parameters as listed here:
        </t>
        <dl newline="false" spacing="normal">
          <dt>Bundle Processing Control Flags:</dt>
          <dd>
The primary block flags <bcp14>SHALL</bcp14> indicate that the payload is an administrative record.
The primary block flags <bcp14>SHALL</bcp14> indicate that user application acknowledgement is requested; this flag distinguishes the Challenge Bundle from the Response Bundle.
          </dd>
          <dt>Destination EID:</dt>
          <dd>
The Destination EID <bcp14>SHALL</bcp14> be the ACME-server-normalized Node ID being validated.
          </dd>
          <dt>Source Node ID:</dt>
          <dd>
The Source Node ID <bcp14>SHALL</bcp14> indicate the Node ID of a BP agent of the ACME server performing the challenge.
          </dd>
          <dt>Creation Timestamp and Lifetime:</dt>
          <dd>
The Creation Timestamp <bcp14>SHALL</bcp14> be set to the time at which the challenge was generated.
The Lifetime <bcp14>SHALL</bcp14> indicate the response interval (of <xref target="sec-nodeid-challenge-response"/>) for which ACME server will accept responses to this challenge.
          </dd>
          <dt>Administrative Record Type Code:</dt>
          <dd>
Set to the ACME Node ID Validation type code defined in <xref target="sec-iana-bp-admin-type"/>.
          </dd>
          <dt>Administrative Record Content:</dt>
          <dd>
            <t>
The Challenge Bundle administrative record content <bcp14>SHALL</bcp14> consist of a CBOR map containing two pairs:
            </t>
            <ul>
              <li>
One pair <bcp14>SHALL</bcp14> consist of key 1 with value of ACME challenge <tt>id-chal</tt>, copied from the challenge object, represented as a CBOR byte string.
              </li>
              <li>
One pair <bcp14>SHALL</bcp14> consist of key 2 with value of ACME challenge <tt>token-bundle</tt>, represented as a CBOR byte string.
The <tt>token-bundle</tt> is a random value that uniquely identifies the challenge bundle.
This value <bcp14>SHALL</bcp14> have at least 128 bits of entropy.
See <xref target="RFC4086"/> for additional information on randomness requirements.
              </li>
              <li>
One pair <bcp14>SHALL</bcp14> consist of key 4 with value of an array containing acceptable hash algorithm identifiers.
The array <bcp14>SHALL</bcp14> be ordered in descending preference, with the first item being the most preferred.
The array <bcp14>SHALL</bcp14> contain at least one item.
Each algorithim identifier <bcp14>SHALL</bcp14> correspond to the Value column (integer or text string) of the algorithm registered in the "COSE Algorithms" registry of <xref target="IANA-COSE"/>.
              </li>
            </ul>
          </dd>
        </dl>
        <t>
This structure is part of the extension CDDL in <xref target="sec-cddl"/>.
An example full Challenge Bundle is included in <xref target="sec-example-bundle-challenge"/>
        </t>
        <t>
For interoperability, entities which use this validation method <bcp14>SHALL</bcp14> support the hash algorithm "SHA-256" of <xref target="RFC9054"/>, but can use other hash algorithms.
This requirement allows for different implementations to be configured to use an interoperable algorithm, but does not preclude the use of other algorithms.
        </t>
        <t>
If the BP agent generating a Challenge Bundle does not have a well-synchronized clock or the agent responding to the challenge is expected to not have a well-synchronized clock, the bundle <bcp14>SHALL</bcp14> include a Bundle Age extension block.
        </t>
        <t>
Challenge Bundles <bcp14>SHALL</bcp14> include a Block Integrity Block (BIB) in accordance with <xref target="sec-bib-gateway"/> or with a Security Source identical to the bundle Source Node.
Challenge Bundles <bcp14>SHALL NOT</bcp14> be directly encrypted by Block Confidentiality Block (BCB) or any other method (see <xref target="sec-security-leak"/>).
        </t>
        <section anchor="sec-challenge-check">
          <name>Challenge Bundle Checks</name>
          <t>
A proper Challenge Bundle meets all of the following criteria:
          </t>
          <ul spacing="normal">
            <li>
The Challenge Bundle was received within the time interval allowed for the challenge.
The allowed interval starts at the Creation Timestamp and extends for the Lifetime of the Challenge Bundle.
            </li>
            <li>
The Challenge Bundle contains a BIB which covers at least the primary block and payload.
That BIB has a security source which is trusted and passes security-context-specific validation (i.e. MAC or signature verification).
            </li>
            <li>
The challenge payload contains the <tt>id-chal</tt> as indicated in the ACME challenge object.
The challenge payload contains a <tt>token-bundle</tt> meeting the definition in <xref target="sec-bundle-challenge"/>.
The challenge payload contains at least one hash algorithm identifier acceptable to the client.
            </li>
          </ul>
          <t>
Any of the failures above <bcp14>SHALL</bcp14> cause the challenge bundle to be deleted and otherwise ignored by the BP agent.
          </t>
        </section>
      </section>
      <section anchor="sec-bundle-response">
        <name>ACME Node ID Validation Response Bundles</name>
        <t>
Each ACME Node ID Validation Response Bundle <bcp14>SHALL</bcp14> be structured and encoded in accordance with <xref target="RFC9171"/>.
        </t>
        <t>
Each Response Bundle has parameters as listed here:
        </t>
        <dl newline="false" spacing="normal">
          <dt>Bundle Processing Control Flags:</dt>
          <dd>
The primary block flags <bcp14>SHALL</bcp14> indicate that the payload is an administrative record.
The primary block flags <bcp14>SHALL NOT</bcp14> indicate that user application acknowledgement is requested; this flag distinguishes the Response Bundle from the Challenge Bundle.
          </dd>
          <dt>Destination EID:</dt>
          <dd>
The Destination EID <bcp14>SHALL</bcp14> be identical to the Source Node ID of the Challenge Bundle to which this response corresponds.
          </dd>
          <dt>Source Node ID:</dt>
          <dd>
The Source Node ID <bcp14>SHALL</bcp14> be identical to the Destination EID of the Challenge Bundle to which this response corresponds.
          </dd>
          <dt>Creation Timestamp and Lifetime:</dt>
          <dd>
The Creation Timestamp <bcp14>SHALL</bcp14> be set to the time at which the response was generated.
The response Lifetime <bcp14>SHALL</bcp14> indicate the response interval remaining if the Challenge Bundle indicated a limited Lifetime.
          </dd>
          <dt>Administrative Record Type Code:</dt>
          <dd>
Set to the ACME Node ID Validation type code defined in <xref target="sec-iana-bp-admin-type"/>.
          </dd>
          <dt>Administrative Record Content:</dt>
          <dd>
            <t>
The Response Bundle administrative record content <bcp14>SHALL</bcp14> consist of a CBOR map containing three pairs:
            </t>
            <ul>
              <li>
One pair <bcp14>SHALL</bcp14> consist of key 1 with value of ACME challenge <tt>id-chal</tt>, copied from the Request Bundle, represented as a CBOR byte string.
              </li>
              <li>
One pair <bcp14>SHALL</bcp14> consist of key 2 with value of ACME challenge <tt>token-bundle</tt>, copied from the Request Bundle, represented as a CBOR byte string.
              </li>
              <li>
One pair <bcp14>SHALL</bcp14> consist of key 3 with value of a two-element array containing the pair of a hash algorithm identifier and the hash byte string.
The algorithim identifier <bcp14>SHALL</bcp14> correspond to the Value column (integer or text string) of the algorithm registered in the "COSE Algorithms" registry of <xref target="IANA-COSE"/>.
              </li>
            </ul>
          </dd>
        </dl>
        <t>
This structure is part of the extension CDDL in <xref target="sec-cddl"/>.
An example full Response Bundle is included in <xref target="sec-example-bundle-response"/>
        </t>
        <t>
If the BP agent responding to a Challenge Bundle does not have a well-synchronized clock, it <bcp14>SHALL</bcp14> use any information about last-hop delays and (if present) Bundle Age extension data to infer the age of the Challenge Bundle and lifetime of the Response Bundle.
        </t>
        <t>
Response Bundles <bcp14>SHALL</bcp14> include a BIB in accordance with <xref target="sec-bib-gateway"/>.
Response Bundles <bcp14>SHALL NOT</bcp14> be directly encrypted by BCB or any other method (see <xref target="sec-security-leak"/> for explanation).
        </t>
        <section anchor="sec-response-check">
          <name>Response Bundle Checks</name>
          <t>
A proper Response Bundle meets all of the following criteria:
          </t>
          <ul spacing="normal">
            <li>
The Response Bundle was received within the time interval allowed for the challenge.
The allowed interval starts at the Creation Timestamp and extends for the Lifetime of the associated Challenge Bundle.
The interval of the Challenge Bundle is used here because the interval of the Response Bundle could be made to disagree with the Challenge Bundle.
            </li>
            <li>
The Response Bundle Source Node ID is identical to the Node ID being validated.
The comparison of Node IDs <bcp14>SHALL</bcp14> use the comparison logic of the NODE-ID from <xref section="4.4.1" target="RFC9174"/>.
            </li>
            <li>
The Response Bundle contains a BIB which covers at least the primary block and payload.
That BIB has a security source which is trusted and passes security-context-specific validation.
            </li>
            <li>
The response payload contains the same <tt>id-chal</tt> and <tt>token-bundle</tt> as sent in the Challenge Bundle (this is also how the two bundles are correlated).
The response payload contains a hash algorithm identifier acceptable to the server (as indicated in the challenge bundle).
The response payload contains the expected Key Authorization digest computed by the ACME server.
            </li>
          </ul>
          <t>
Any of the failures above <bcp14>SHALL</bcp14> cause that single-perspective validation to fail.
Any of the failures above <bcp14>SHOULD</bcp14> be distinguished as subproblems to the ACME client.
The lack of a response within the expected response interval, as defined in <xref target="sec-nodeid-challenge-response"/>, <bcp14>SHALL</bcp14> also be treated as a validation failure.
          </t>
        </section>
      </section>
      <section anchor="sec-multi-perspective">
        <name>Multi-Perspective Validation</name>
        <t>
To avoid possible on-path attacks in certain networks, an ACME server can perform a single validation using multiple challenge bundle sources or via multiple routing paths.
This technique is called multi-perspective validation as recommended in <xref section="10.2" target="RFC8555"/> and an implementation used by Let's Encrypt is described in <xref target="LE-multi-perspective"/>.
        </t>
        <t>
When required by policy, an ACME server <bcp14>SHALL</bcp14> send multiple challenge bundles from different sources in the DTN network.
When multiple Challenge Bundles are sent for a single validation, it is a matter of ACME server policy to determine whether or not the validation as a whole is successful.
The result of each single-source validation is defined as success or failure in <xref target="sec-response-check"/>.
        </t>
        <t>
A <bcp14>RECOMMENDED</bcp14> validation policy is to succeed if the challenge from a primary bundle source is successful and if there are no more than one failure from a secondary source.
The determination of which perspectives are considered primary or secondary is an implementation matter.
        </t>
        <t>
Regardless of whether a validation is single- or multi-perspective, a validation failure <bcp14>SHALL</bcp14> be indicated by an ACME error type of "incorrectResponse".
Each specific perspective failure <bcp14>SHOULD</bcp14> be indicated to the ACME client as a validation subproblem.
        </t>
      </section>
    </section>
    <section anchor="sec-bib-gateway">
      <name>Bundle Integrity Gateway</name>
      <t>
This section defines a BIB use which closely resembles the function of DKIM email signing <xref target="RFC6376"/>.
In this mechanism a routing node in a DTN sub-network attests to the origination of a bundle by adding a BIB before forwarding it.
The bundle receiver then need not trust the source of the bundle, but only trust this security source node.
The receiver needs policy configuration to know which security sources are permitted to attest for which bundle sources.
      </t>
      <t>
An integrity gateway <bcp14>SHALL</bcp14> validate the Source Node ID of a bundle, using local-network-specific means, before adding a BIB to the bundle.
The exact means by which an integrity gateway validates a bundle's source is network-specific, but could use physical-layer, network-layer or BP-convergence-layer authentication.
The bundle source could also add its own BIB with a local-network-specific security context or local-network-specific key material (i.e. a group key shared within the local network).
      </t>
      <t>
When an integrity gateway adds a BIB it <bcp14>SHALL</bcp14> be in accordance with <xref target="RFC9172"/>.
The BIB targets <bcp14>SHALL</bcp14> cover both the payload block and the primary block (either directly as a target or as additional authenticated data for the payload block MAC/signature).
The Security Source of this BIB <bcp14>SHALL</bcp14> be either the bundle source Node ID itself or a routing node trusted by the destination node (see <xref target="sec-security-impersonate"/>).
      </t>
    </section>
    <section>
      <name>Certificate Request Profile</name>
      <t>
The ultimate purpose of this ACME validation is to allow a CA to issue certificates following the profiles of <xref section="4.4.2" target="RFC9174"/>, <xref target="I-D.sipos-dtn-udpcl"/>, and <xref target="I-D.bsipos-dtn-bpsec-cose"/>.
These purposes are referred to here as bundle security certificates.
      </t>
      <t>
One defining aspect of bundle security certificates is the Extended Key Usage key purpose <tt>id-kp-bundleSecurity</tt> of <xref target="IANA-SMI"/>, as defined in <xref section="4.4.2.1" target="RFC9174"/>.
When requesting a certificate which includes a Node ID SAN, the CSR <bcp14>SHOULD</bcp14> include an Extended Key Usage of <tt>id-kp-bundleSecurity</tt>.
When a bundle security certificate is issued based on a validated Node ID SAN, the certificate <bcp14>SHALL</bcp14> include an Extended Key Usage of <tt>id-kp-bundleSecurity</tt>.
      </t>
      <section anchor="sec-multiple-claims">
        <name>Multiple Identity Claims</name>
        <t>
A single bundle security CSR <bcp14>MAY</bcp14> contain a mixed set of SAN claims, including combinations of "ip", "dns", and "bundleEID" claims.
There is no restriction on how a certificate combines these claims, but each claim <bcp14>SHALL</bcp14> be validated by an ACME server to issue such a certificate as part of an associated ACME order.
This is no different than the existing behavior of <xref target="RFC8555"/> but is mentioned here to make sure that CA policy handles such situations; especially related to validation failure of an identifier in the presence of multiple identifiers.
The initial "ip" validations are defined in <xref target="RFC8738"/> and initial "dns" validations are defined in <xref target="RFC8555"/> and <xref target="RFC8737"/>.
The specific use case of <xref target="RFC9174"/> allows, and for some network policies requires, that a certificate authenticate both the DNS name of an entity as well as the Node ID of the entity.
        </t>
      </section>
      <section>
        <name>Generating Encryption-only or Signing-only Bundle Security Certificates</name>
        <t>
ACME extensions specified in this document can be used to request encryption-only or signing-only bundle security certificates.
The validity of a request for either a restricted-use or unrestricted-use certificate is dependent on both CA policy to issue such certificates as well as constraints based on the requested key and algorithm types.
        </t>
        <t>
In order to request signing only bundle security certificate, the CSR <bcp14>SHALL</bcp14> include the key usage extension with digitalSignature and/or nonRepudiation bits set and no other bits set.
        </t>
        <t>
In order to request encryption only bundle security certificate, the CSR <bcp14>SHALL</bcp14> include the key usage extension with keyEncipherment or keyAgreement bits set and no other bits set.
        </t>
        <t>
Presence of both of the above sets of key usage bits in the CSR, as well as absence of key usage extension in the CSR, signals to ACME server to issue a bundle security certificate suitable for both signing and encryption.
        </t>
      </section>
    </section>
    <section removeInRFC="true">
      <name>Implementation Status</name>
      <t>
[NOTE to the RFC Editor: please remove this section before publication, as well as the reference to <xref target="RFC7942"/> and <xref target="github-dtn-demo-agent"/> and <xref target="github-dtn-wireshark"/>.]
      </t>
      <t>
This section records the status of known implementations of the protocol defined by this specification at the time of posting of this Internet-Draft, and is based on a proposal described in <xref target="RFC7942"/>.
The description of implementations in this section is intended to assist the IETF in its decision processes in progressing drafts to RFCs.
Please note that the listing of any individual implementation here does not imply endorsement by the IETF.
Furthermore, no effort has been spent to verify the information presented here that was supplied by IETF contributors.
This is not intended as, and must not be construed to be, a catalog of available implementations or their features.
Readers are advised to note that other implementations can exist.
      </t>
      <t>
An example implementation of the this draft of ACME Node ID Validation has been created as a GitHub project <xref target="github-dtn-demo-agent"/> and is intended to use as a proof-of-concept and as a possible source of interoperability testing.
      </t>
      <t>
A Wireshark dissector for of the this draft of ACME Node ID Validation has been created as a GitHub project <xref target="github-dtn-wireshark"/> and is intended to be used to inspect and troubleshoot implementations.
      </t>
    </section>
    <section anchor="sec-security">
      <name>Security Considerations</name>
      <t>
This section separates security considerations into threat categories based on guidance of BCP 72 <xref target="RFC3552"/>.
      </t>
      <section anchor="sec-security-leak">
        <name>Threat: Passive Leak of Validation Data</name>
        <t>
Because this challenge mechanism is used to bootstrap security between DTN Nodes, the challenge and its response are likely to be transferred in plaintext.
The only ACME data present on-the-wire is a random token and a cryptographic digest, so there is no sensitive data to be leaked within the Node ID Validation bundle exchange.
Because each challenge uses a separate token pair, there is no value in an on-path attacker seeing the tokens from past challenges and/or responses.
        </t>
        <t>
It is possible for intermediate BP nodes to encapsulate-and-encrypt Challenge and/or Response Bundles while they traverse untrusted networks, but that is a DTN configuration matter outside of the scope of this document.
        </t>
      </section>
      <section anchor="sec-security-impersonate">
        <name>Threat: BP Node Impersonation</name>
        <t>
As described in <xref section="8.1" target="RFC8555"/>, it is possible for an active attacker to alter data on both ACME client channel and the DTN validation channel.
        </t>
        <t>
The primary mitigation is to delegate bundle integrity sourcing to a trusted routing node near, in the sense of bundle routing topology, to the bundle source node as defined in <xref target="sec-bib-gateway"/>.
This is functionally similar to DKIM signing of <xref target="RFC6376"/> and provides some level of bundle origination.
        </t>
        <t>
Another way to mitigate single-path on-path attacks is to attempt validation of the same Node ID from multiple sources or via multiple bundle routing paths, as defined in <xref target="sec-multi-perspective"/>.
It is not a trivial task to guarantee bundle routing though, so more advanced techniques such as onion routing (using bundle-in-bundle encapsulation <xref target="I-D.ietf-dtn-bibect"/>) could be employed.
        </t>
      </section>
      <section anchor="sec-security-replay">
        <name>Threat: Bundle Replay</name>
        <t>
It is possible for an on-path attacker to replay both Challenge Bundles or Response Bundles.
Even in a properly-configured DTN it is possible that intermediate bundle routers to use multicast forwarding of a unicast-destination bundle.
        </t>
        <t>
Ultimately, the point of the ACME bundle exchange is to derive a Key Authorization and its cryptographic digest and communicate it back to the ACME server for validation, so the uniqueness of the Key Authorization directly determines the scope of replay validity.
The uniqueness of each <tt>token-bundle</tt> to each challenge bundle ensures that the Key Authorization is unique to the challenge bundle.
The uniqueness of each <tt>token-chal</tt> to the ACME challenge ensures that the Key Authorization is unique to that ACME challenge and not based solely on values visible to on-path eavesdroppers.
        </t>
        <t>
Having each bundle's primary block and payload block covered by a BIB from a trusted security source (see <xref target="sec-bib-gateway"/>) ensures that a replayed bundle cannot be altered in the blocks used by ACME.
All together, these properties mean that there is no degraded security caused by replay of either a Challenge Bundle or a Response Bundle even in the case where the primary or payload block is not covered by a BIB.
The worst that can come of bundle replay is the waste of network resources as described in <xref target="sec-security-dos"/>.
        </t>
      </section>
      <section anchor="sec-security-dos">
        <name>Threat: Denial of Service</name>
        <t>
The behaviors described in this section all amount to a potential denial-of-service to a BP agent.
        </t>
        <t>
A malicious entity can continually send Challenge Bundles to a BP agent.
The victim BP agent can ignore Challenge Bundles which do not conform to the specific time interval and challenge token for which the ACME client has informed the BP agent that challenges are expected.
The victim BP agent can require all Challenge Bundles to be BIB-signed to ensure authenticity of the challenge.
        </t>
        <t>
A malicious entity can continually send Response Bundles to a BP agent.
The victim BP agent can ignore Response Bundles which do not conform to the specific time interval or Source Node ID or challenge token for an active Node ID validation.
        </t>
        <t>
Similar to other validation methods, an ACME server validating a DTN Node ID could be used as a denial of service amplifier.
For this reason any ACME server can rate-limit validation activities for individual clients and individual certificate requests.
        </t>
      </section>
      <section>
        <name>Inherited Security Considerations</name>
        <t>
Because this protocol relies on ACME for part of its operation, the security considerations of <xref target="RFC8555"/> apply to all ACME client--server exchanges during Node ID validation.
        </t>
        <t>
Because this protocol relies on BPv7 for part of its operation, the security considerations of <xref target="RFC9171"/> and <xref target="RFC9172"/> apply to all BP messaging during Node ID validation.
        </t>
      </section>
      <section>
        <name>Out-of-Scope BP Agent Communication</name>
        <t>
Although messaging between an ACME client or ACME server an its associated BP agent are out-of-scope for this document, both of those channels are critical to Node ID validation security.
Either channel can potentially leak data or provide attack vectors if not properly secured.
These channels need to protect against spoofing of messaging in both directions to avoid interruption of normal validation sequencing and to prevent false validations from succeeding.
        </t>
        <t>
The ACME server and its BP agent exchange the outgoing <tt>id-chal</tt>, <tt>token-bundle</tt>, and Key Authorization digest but these values do not need to be confidential (they are also in plaintext over the BP channel).
        </t>
        <t>
Depending on implementation details, the ACME client might transmit the client account key thumbprint to its BP agent to allow computing the Key Authorization digest on the BP agent.
If an ACME client does transmit its client account key thumbprint to a BP agent, it is important that this data is kept confidential because it provides the binding of the client account key to the Node ID validation (as well as for all other types of ACME validation).
Avoiding this transmission would require a full round-trip between BP agent and ACME client, which can be undesirable if the two are separated by a long-delay network.
        </t>
      </section>
    </section>
    <section anchor="sec-iana">
      <name>IANA Considerations</name>
      <t>
This specification adds to the ACME registry and BP registry for this behavior.
      </t>
      <section anchor="sec-iana-acme-identifier">
        <name>ACME Identifier Types</name>
        <t>
Within the "Automated Certificate Management Environment (ACME) Protocol" registry <xref target="IANA-ACME"/>, the following entry has been added to the "ACME Identifier Types" sub-registry.
        </t>
        <table>
          <thead>
            <tr>
              <th>Label</th>
              <th>Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>bundleEID</td>
              <td>This specification and <xref target="RFC3986"/></td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec-iana-acme-method">
        <name>ACME Validation Methods</name>
        <t>
Within the "Automated Certificate Management Environment (ACME) Protocol" registry <xref target="IANA-ACME"/>, the following entry has been added to the "ACME Validation Methods" sub-registry.
        </t>
        <table>
          <thead>
            <tr>
              <th>Label</th>
              <th>Identifier Type</th>
              <th>ACME</th>
              <th>Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>dtn-nodeid-01</td>
              <td>bundleEID</td>
              <td>Y</td>
              <td>This specification</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section anchor="sec-iana-bp-admin-type">
        <name>Bundle Administrative Record Types</name>
        <t>
Within the "Bundle Protocol" registry <xref target="IANA-BP"/>, the following entries have been added to the "Bundle Administrative Record Types" sub-registry.
        </t>
        <t>
[NOTE to the RFC Editor: For <xref target="RFC5050"/> compatibility the AR-TBD value needs to be no larger than 15, but such compatibility is not needed. For BPbis the AR-TBD value needs to be no larger than 65535 as defined by <xref target="I-D.sipos-dtn-bpv7-admin-iana"/>.]
        </t>
        <table>
          <thead>
            <tr>
              <th>Bundle Protocol Version</th>
              <th>Value</th>
              <th>Description</th>
              <th>Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>7</td>
              <td>AR-TBD</td>
              <td>ACME Node ID Validation</td>
              <td>This specification</td>
            </tr>
          </tbody>
        </table>
      </section>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <reference anchor="IANA-ACME" target="https://www.iana.org/assignments/acme/">
          <front>
            <title>Automated Certificate Management Environment (ACME) Protocol</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
        <reference anchor="IANA-BP" target="https://www.iana.org/assignments/bundle/">
          <front>
            <title>Bundle Protocol</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
        <reference anchor="IANA-COSE" target="https://www.iana.org/assignments/cose/">
          <front>
            <title>CBOR Object Signing and Encryption (COSE)</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
        <reference anchor="IANA-SMI" target="https://www.iana.org/assignments/smi-numbers/">
          <front>
            <title>Structure of Management Information (SMI) Numbers</title>
            <author>
              <organization>IANA</organization>
            </author>
            <date/>
          </front>
        </reference>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2985.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3552.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4086.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4648.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4838.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5280.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7942.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8555.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8610.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.9054.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.9171.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.9172.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5050.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6376.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8737.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8738.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8823.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.9174.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml-ids/reference.I-D.ietf-dtn-bibect.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml-ids/reference.I-D.sipos-dtn-udpcl.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml-ids/reference.I-D.sipos-dtn-bpv7-admin-iana.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml-ids/reference.I-D.bsipos-dtn-bpsec-cose.xml"/>
        <reference anchor="github-dtn-demo-agent" target="https://github.com/BrianSipos/dtn-demo-agent/">
          <front>
            <title>Python implementation of basic BPv7-related protocols</title>
            <author fullname="Brian Sipos" initials="B." surname="Sipos">
            </author>
            <date/>
          </front>
        </reference>
        <reference anchor="github-dtn-wireshark" target="https://github.com/BrianSipos/dtn-wireshark/">
          <front>
            <title>Wireshark Dissectors for BPv7-related Protocols</title>
            <author fullname="Brian Sipos" initials="B." surname="Sipos">
            </author>
            <date/>
          </front>
        </reference>
        <reference anchor="LE-multi-perspective" target="https://letsencrypt.org/2020/02/19/multi-perspective-validation.html">
          <front>
            <title>Multi-Perspective Validation Improves Domain Validation Security</title>
            <author fullname="Josh Aas"/>
            <author fullname="Daniel McCarney"/>
            <author fullname="Roland Shoemaker"/>
            <date day="19" month="Feb" year="2020"/>
          </front>
        </reference>
      </references>
    </references>
    <section anchor="sec-cddl">
      <name>Administrative Record Types CDDL</name>
      <t>
[NOTE to the RFC Editor: The "0xFFFF" in this CDDL is replaced by the "ACME Node ID Validation" administrative record type code.]
      </t>
      <t keepWithNext="true">
The normative CDDL extension of BP <xref target="RFC9171"/> for the ACME bundles is:
      </t>
      <sourcecode type="cddl">
; All ACME records have the same structure
$admin-record /= [0xFFFF, acme-record]
acme-record = {
  id-chal,
  token-bundle,
  ? key-auth-digest ; present in Response Bundles
  ? alg-list ; present in Challenge Bundles
}
id-chal = (1 =&gt; bstr)
token-bundle = (2 =&gt; bstr)
key-auth-digest = (3 =&gt; [
    alg: alg-id,
    value: bstr
])
alg-list = (4 =&gt; [+ alg-id])
; From the IANA registry, only hash algorithms allowed
alg-id: tstr / int
</sourcecode>
    </section>
    <section>
      <name>Example Authorization</name>
      <t>
[NOTE to the RFC Editor: The "0xFFFF" in these examples are replaced by the "ACME Node ID Validation" administrative record type code.]
      </t>
      <t>
This example is a bundle exchange for the ACME server with Node ID "dtn://acme-server/" performing a verification for ACME client Node ID "dtn://acme-client/".
The example bundles use no block CRC or BPSec integrity, which is for simplicity and is not recommended for normal use.
The provided figures are extended diagnostic notation <xref target="RFC8610"/>.
      </t>
      <t>
For this example the ACME client key thumbprint has the base64url encoded value of:
      </t>
      <sourcecode type="cbor">
"LPJNul-wow4m6DsqxbninhsWHlwfp0JecwQzYpOLmCQ"
</sourcecode>
      <t>
And the ACME-server generated <tt>token-chal</tt> has the base64url-encoded value of:
      </t>
      <sourcecode type="cbor">
"tPUZNY4ONIk6LxErRFEjVw"
</sourcecode>
      <section anchor="sec-example-bundle-challenge">
        <name>Challenge Bundle</name>
        <t>
For the single challenge bundle in this example, the <tt>token-bundle</tt> (transported as byte string via BP) has the base64url-encoded value of:
        </t>
        <sourcecode type="cbor">
"p3yRYFU4KxwQaHQjJ2RdiQ"
</sourcecode>
        <t>
The minimal-but-valid Challenge Bundle is shown in <xref target="fig-example-bundle-challenge"/>.
This challenge requires that the ACME client respond within a 60 second time window.
        </t>
        <figure anchor="fig-example-bundle-challenge">
          <name>Example Challenge Bundle</name>
          <sourcecode type="cbor">
[_
  [
    7, / BP version /
    0x22, / flags: user-app-ack, payload-is-an-admin-record /
    0, / CRC type: none /
    [1, "//acme-client/"], / destination /
    [1, "//acme-server/"], / source /
    [1, 0], / report-to: none /
    [1000000, 0], / timestamp: 2000-01-01T00:16:40+00:00 /
    60000 / lifetime: 60s /
  ],
  [
    1, / block type code /
    1, / block number /
    0, / flags /
    0, / CRC type: none /
    &lt;&lt;[ / type-specific data /
      0xFFFF, / record-type-code /
      { / record-content /
        1: b64'dDtaviYTPUWFS3NK37YWfQ', / id-chal /
        2: b64'p3yRYFU4KxwQaHQjJ2RdiQ', / token-bundle /
        4: [-16] / alg-list: SHA-256 /
      }
    ]&gt;&gt;
  ]
]
</sourcecode>
        </figure>
      </section>
      <section anchor="sec-example-bundle-response">
        <name>Response Bundle</name>
        <t>
When the tokens are combined with the key thumbprint, the full Key Authorization value (a single string split across lines for readability) is:
      </t>
        <sourcecode type="cbor">
"p3yRYFU4KxwQaHQjJ2RdiQtPUZNY4ONIk6LxErRFEjVw."
"LPJNul-wow4m6DsqxbninhsWHlwfp0JecwQzYpOLmCQ"
</sourcecode>
        <t>
The minimal-but-valid Response Bundle is shown in <xref target="fig-example-bundle-response"/>.
This response indicates that there is 30 seconds remaining in the response time window.
        </t>
        <figure anchor="fig-example-bundle-response">
          <name>Example Response Bundle</name>
          <sourcecode type="cbor">
[_
  [
    7, / BP version /
    0x02, / flags: payload-is-an-admin-record /
    0, / CRC type: none /
    [1, "//acme-server/"], / destination /
    [1, "//acme-client/"], / source /
    [1, 0], / report-to: none /
    [1030000, 0], / timestamp: 2000-01-01T00:17:10+00:00 /
    30000 / lifetime: 30s /
  ],
  [
    1, / block type code /
    1, / block number /
    0, / flags /
    0, / CRC type: none /
    &lt;&lt;[ / block-type-specific data /
      0xFFFF, / record-type-code /
      { / record-content /
        1: b64'dDtaviYTPUWFS3NK37YWfQ', / id-chal /
        2: b64'p3yRYFU4KxwQaHQjJ2RdiQ', / token-bundle /
        3: [-16, b64'mVIOJEQZie8XpYM6MMVSQUiNPH64URnhM9niJ5XHrew']
        / SHA-256 key auth. digest /
      }
    ]&gt;&gt;
  ]
]
</sourcecode>
        </figure>
      </section>
    </section>
    <section anchor="sec-doc-ack" numbered="false">
      <name>Acknowledgments</name>
      <t>
This specification is based on DTN use cases related to PKIX certificate issuance.
      </t>
      <t>
The workflow and terminology of this validation method was originally copied from the work of Alexey Melnikov in <xref target="RFC8823"/>.
      </t>
    </section>
  </back>
</rfc>
